type Newsletter @model {
  id: ID!
  email: String!
  name: String!
}

type Date @model {
  id: ID!
  year: Int!
  month: Int!
  day: Int!
  hour: Int!
  minute: Int!
  second: Int!
}

type Teacher @model {
  id: ID!
	first_name: String!
	last_name: String!
	school: String!
	gradYear: String
	email: String
	country: String
	city: String
	bio: String
	seminarId: String
}

type TeacherRegistration @model {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  school: String!
  gradYear: String!
  coFirst: String
  coLast: String
  coEmail: String
  coSchool: String
  coYear: String
  seminarTitle: String!
  seminarDesc: String!
  numSessions: String!
  qualifications: String!
  priorTeaching: String!
  engagement: String!
  skills: String!
  previousWaves: String!
  questions: String
  approved: Boolean
}

type Student @model {
  id: ID!
  city: String!
  state: String!
  country: String!
  school: String!
  first_name: String!
  last_name: String!
  email: String!
  grade: String!
  howYouHear: String!
  parent_first_name: String!
  parent_last_name: String!
  parentEmail: String!
}

type EventAssignments @model {
  id: ID!
  event: SpecialEvent!
  waitlisted: Boolean!
  absences: Int!
}

type SeminarAssignments @model {
  id: ID!
  seminar: Seminar!
  waitlisted: Boolean!
  absences: Int!
}

type BlogPost @model {
  id: ID!
  content: String!
  date: String!
  image: String!
  title: String!
  views: [String]
}

type Seminar @model {
  id: ID!
  classTimes: String!
  classDays: String!
  classDates: String!
  courseCategory: [String!]!
  courseDescription: String!
  courseTitle: String!
  edLink: String!
  maxClassSize: Int
  picture: String
  prereqs: String
  syllabus: String
  targetAudience: [Int]
  teachers: [ID!]!
  zoomLink: String!
}

enum SpecialEvent {
  COLLEGEPANEL
  CAREERPANEL
  SPECIALGUEST
}

type OfficeHours {
  id: ID!
  teachers: [Teacher!]!
  targetAudience: [Int]
  subject: String!
}

type TutorRegistration @model {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  school: String!
  gradYear: String!
  subjects: [String!]!
  ageRanges: [String!]!
  qualifications: String!
  why: String!
  experience: String!
  hours: String!
  questions: String
  othersubjects: String
  approved: Boolean
}

type EventRegistration @model {
  id: ID!
  studentID: String
  eventID: String!
  first_name: String!
  last_name: String!
  email: String!
  country: String
  city: String
  state: String
  school: String
  notes: String
  questions: String
  extra: String
  howYouHear: [String]
}

type SeminarRegistration @model {
  id: ID!
  email: String!
  numSeminars: Int!
  sem1: ID!
  sem2: ID
  sem3: ID
  sem4: ID
  sem5: ID
  reason1: String!
  reason2: String
  reason3: String
  reason4: String
  reason5: String
  pastCourses: [String!]!
}
